#include "stdafx.h"	// обязательный заголовочный файл
#include "Task2.h"	// связываем объявление с определением
#include <cmath>	// подключаем дополнительную библиотеку для математических функций, потому что она тут пригодится

unsigned long int factorial(unsigned int безобразие);	// объявляем прототип функции factorial. Функция возвращает беззнаковое расширенное целое число
												// (unsigned - беззнаковое, long - расширеннное, int - целое число). В качестве параметра принимает
												// беззнаковое целое число

void function_2()				// реализация функции function_2
{	// начало функции 
	double x;	// объявляем переменную переменную x типа числа с плавающей точкой
	cout << "Введите число с плавающей точкой в диапазоне (0;1):" << endl;	// Выводим сообщение
	cin >> x;		// Вводим число с клавиатуры (формата n.nnnnnnn)
	if (x > 0 && x < 1)		// если число в приемлимых рамках, то
	{	// начало блока if-a, в блоке следует то, что будет выполняться, если число адекватное
		double iter, sum = 0;		// создаем переменные типа double: iter - для хранения слагаемого, sum - для хранения общей суммы,
		const double e = 1E-6;		// переменная е с неизменяемым (const) значением - точность, которая будет ограничивать искомое число
		int k = 1;			// объявляем переменную типа int и инициализируем ее значением 1
		do    // начинается цикл do...while
		{		//начало цикла, т.е. того что будет повторяться 
			iter = ((k % 2 == 0 ? 1 : -1) / (factorial(k) * factorial(k + 1))) * pow(x / 2, 2 * k + 1);	// сама математическая формула, результат
																								// записываем в переменную iter
			sum += iter;		// прибавляем текущее слагаемое к общей сумме
			k++;		// увеличиваем k на единицу
		}	// конец блока цикла 
		while (iter > e);  // условие для продолжения цикла: повторяем пока текущее слагаемое iter больше точности e 
		cout << "Результат равен:   " << sum << endl;
	}	// конец блока if-a
	else    // в противном случае, если введено число не нормальное
	{	// начало блока else
		cout << "Вы дурак, сэр" << endl;
	}	// конец блока else
}	// конец функции

unsigned long int factorial(unsigned int x)	// реализация функции factorial, принимаем какое-то беззнаковое целое число
{	// начало блока функции
	int res = 1;	// создаем переменную res, инициализируем единицей
	for (int i = 1; i <= x; i++)	// цикл for, повторяется x раз, от i = 1 до i = x, с увеличением i на каждом шаге на 1
	{	// начало цикла
		res *= i;	// умножаем res на i и записываем в res (ну здесь факториал считается)
	}	// конец цикла
	return res;		// возвращаем в точку вызова функции результат вычислений
}	// конец блока функции 
