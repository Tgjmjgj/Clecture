// TestProject.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"		// Подключаем этот файл первым, ибо надо так
#include "Task1.h"		// подключаем файл с первой функцией, чтобы можно было к ней обратиться
#include "Task2.h"		// аналогично
#include "Task3.h"		// аналогично

int _tmain(int argc, _TCHAR* argv[])		// главная функция программы - main
{	// начало функции
	setlocale(LC_CTYPE, "rus");		// устанавливаем русскую локализацию, для поддержки кириллицы в консоли при выводе
	int num;		// объявляем переменную типа int с идентификатором num
	do   // начинаем цикл do...while
	{	// начало блока цикла
		cout << endl << "Введите 1 - для задания 1, 2 - для задания 2, "	// выводим буковки на консоль
				<< "3 - для задания 3, -1 - для выхода" << endl;
		cin >> num;		// ввод числа в переменную num
		switch(num)			// оператор выбора. В зависимости от значения num
		{	// начало оператора выбора
		case 1 :	// если num равен 1, то выполняем следующее
			cout << "Выбрано задание 1" << endl;	// выводим сообщение
			function_1();		// вызываем(выполняем) функцию function_1. Переходим в функцию, выполняем ее, когда функция завершится,
								// возвращаемся сюда же и продолжаем выполнение программы здесь
			break;	// прерываем/заканчиваем оператор выбора
		case 2 :	// если num равен 2, то выполняем следующее
			cout << "Выбрано задание 2" << endl;	// вывод
			function_2();	// всё аналогично, только функция function_2
			break;	// и снова 
		case 3 :	// если num равен 3, то выполняем следующее
			cout << "Выбрано задание 3" << endl;	// вывод
			function_3();	// опять двадцать пять
			break;	// это комменатрий
		default :	// если num не равен ни одному из перечисленных выше значений, то выполняем 
			cout << "Введено некорректное значение" << endl; // вывод
			break;	// заканчиваем
		}	// конец оператора выбора
		// после break-a переходим в этом место
	} // конец блока цикла
	while(num != -1); // условие цикла: повторяем, до тех пор, пока num не будет равен -1. Когда это произойдет, выходим из цикла
	return 0;	// Возвращем 0, завершаем функцию main, т.е. завершаем выполнение программы
}	// конец функции

